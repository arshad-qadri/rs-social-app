{"version":3,"sources":["components/layout/welcome_img.svg","components/dashboard/maintenance.svg","components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/layout/Alert.js","reducers/alert.js","reducers/auth.js","reducers/post.js","reducers/index.js","store.js","components/routing/PrivateRoute.js","components/posts/PostItem.js","actions/post.js","components/layout/Spinner.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","className","to","onClick","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","width","src","WelcomeImg","alt","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","autoComplete","required","minLength","login","Maintenance","alerts","alert","length","map","key","initialState","getItem","user","posts","combineReducers","action","filter","setItem","removeItem","_id","likes","comments","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Component","component","rest","render","props","PostItem","addLike","removeLike","deletePost","text","avatar","date","showActions","style","float","height","format","defaultProps","put","statusText","status","delete","display","placeItems","spinner","addPost","setText","rows","letterSpacing","outline","getPosts","useEffect","Spinner","addComment","postId","deleteComment","commentId","getPost","match","params","App","exact","path","Landing","Register","Login","Dashboard","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9044dede.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/welcome_img.a830abe3.svg\";","module.exports = __webpack_public_path__ + \"static/media/maintenance.48b8f201.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.bbf63906.gif\";","import { v4 as uuidv4 } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType) => dispatch => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\r\n};","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\n\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n// POSTS\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from \"./types\";\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n\r\n  const authLinks = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      |\r\n      <li className=\"nav-item font-weight-bold active px-3\">\r\n        <Link className=\"nav-link\" to=\"/posts\"><i className=\"fa fa-file-text-o\"></i>{'  '}Posts</Link>\r\n      </li>\r\n      |\r\n      <li className=\"nav-item font-weight-bold active px-3\">\r\n        <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\r\n      </li>\r\n          |\r\n      <li className=\"nav-item font-weight-bold active px-3\">\r\n        <Link\r\n          className=\"btn btn-outline-danger\"\r\n          onClick={logout}\r\n          to=\"/\"\r\n        >\r\n          <i className=\"fa fa-sign-out\"></i>\r\n          {\"  \"}\r\n          Signout\r\n          </Link>\r\n      </li>\r\n          |\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      |\r\n      <li className=\"nav-item font-weight-bold active px-3\">\r\n        <Link className=\"nav-link\" to=\"/\"><i className=\"fa fa-home\"></i>{'  '}Home</Link>\r\n      </li>\r\n          |\r\n      <li className=\"nav-item font-weight-bold active px-3\">\r\n        <Link className=\"nav-link\" to=\"/register\"><i className=\"fa fa-user-plus\"></i>{\"  \"}Register</Link>\r\n      </li>\r\n          |\r\n      <li className=\"nav-item font-weight-bold active px-3\">\r\n        <Link className=\"nav-link\" to=\"/login\"><i className=\"fa fa-sign-in\"></i>{\"  \"}Login</Link>\r\n      </li>|\r\n    </ul>\r\n  );\r\n\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light mb-3\">\r\n      <Link className=\"navbar-brand font-weight-bold\" to=\"/\">\r\n        <i className=\"fa fa-flag logo\"></i>{\"  \"}\r\n        <span className=\"logo\">Test App</span>\r\n      </Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        {!loading && (\r\n          <Fragment>\r\n            {isAuthenticated ? authLinks :\r\n              guestLinks\r\n            }\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapSateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapSateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport WelcomeImg from \"./welcome_img.svg\";\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container text-center\">\r\n        <h1 className=\"mb-5\"> Welcome to August Test App</h1>\r\n        <h3>Consider Register Yourself</h3>\r\n        <img\r\n          className=\"m-5\"\r\n          width=\"300px\"\r\n          src={WelcomeImg}\r\n          alt=\"post_img\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport PropTypes from 'prop-types';\r\nimport { register } from \"../../actions/auth\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\"\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    };\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"d-flex justify-content-center m-5\">\r\n        <div className=\"text-center p-5 shadow-lg p-3 mb-5 color rounded\">\r\n          <h1 className=\"display-3 font-weight-bold\">Sign Up</h1>\r\n\r\n          <h3 className=\"py-3\">\r\n            <i className=\"fa fa-user-plus\"></i>\r\n            {\"  \"}\r\n            Create Your Account\r\n         </h3>\r\n\r\n          <form onSubmit={e => onSubmit(e)} >\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                autoComplete=\"off\"\r\n                name=\"name\"\r\n                required\r\n                value={name}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required\r\n              />\r\n              <small className=\"form-text\">\r\n                Gravatar email\r\n            </small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                minLength=\"6\"\r\n                required\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                minLength=\"6\"\r\n                required\r\n                value={password2}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn\r\n             btn-outline-primary btn-block my-3\" value=\"Register\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Already have an account? <Link to=\"/login\">Sign In</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setAlert, register }\r\n)(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/auth\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"d-flex justify-content-center m-5\">\r\n        <div className=\"text-center p-5 shadow-lg p-3 mb-5 color rounded\">\r\n          <h1 className=\"display-3 font-weight-bold\">Sign In</h1>\r\n\r\n          <h3 className=\"py-3\">\r\n            <i className=\"fa fa-user\"></i>\r\n            {\"  \"}\r\n             Sign In to your Account\r\n         </h3>\r\n\r\n          <form onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email Address\"\r\n                autoComplete=\"off\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                minLength=\"6\"\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-block btn-outline-primary my-4\" value=\"Login\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Don't have an account? <Link to=\"/register\">Log In</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport Maintenance from \"./maintenance.svg\";\r\n\r\nconst Dashboard = (auth) => {\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1 className=\"mb-4\">Dashboard</h1>\r\n      <img\r\n        className=\"m-5\"\r\n        width=\"300px\"\r\n        src={Maintenance}\r\n        alt=\"dashboard_img\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alert !== null && alerts.length > 0 && alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div >\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n \r\nexport default connect(mapStateToProps)(Alert);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => post._id === payload.id ? {\r\n          ...post,\r\n          likes: payload.likes\r\n        } : post),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: payload\r\n        },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(comment => comment._id !== payload)\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  post\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : (\r\n            <Component {...props} />\r\n          )\r\n      }\r\n    />\r\n  );\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: {\r\n    _id,\r\n    text,\r\n    name,\r\n    avatar,\r\n    user,\r\n    likes,\r\n    comments,\r\n    date\r\n  },\r\n  showActions\r\n}) => (\r\n    <div className=\"bg-light rounded border border-primary p-3 my-3\">\r\n      <Link to=\"/dashboard\">\r\n        <img\r\n          className=\"rounded-circle shadow mx-4\"\r\n          style={{\r\n            float: \"left\",\r\n            height: \"100px\",\r\n            width: \"100px\"\r\n          }}\r\n          src={avatar}\r\n          alt=\"user-img\"\r\n        />\r\n      </Link>\r\n      <div>\r\n        <h4>{name}</h4>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p>\r\n          Posted on <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n        </p>\r\n        {showActions &&\r\n          <Fragment>\r\n            <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fa fa-thumbs-up\"></i>{\"  \"}\r\n              <span>{likes.length > 0 && (\r\n                <span>{likes.length}</span>\r\n              )}</span>\r\n            </button>\r\n            <button\r\n              onClick={e => removeLike(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\">\r\n              <i className=\"fa fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/post/${_id}`} className=\"btn btn-outline-primary mx-3\">\r\n              Comment {\" \"}\r\n              {comments.length > 0 && (\r\n                <span className='comment-count'>{comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={e => deletePost(_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger\"\r\n              >\r\n                <i className=\"fa fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n  { addLike, removeLike, deletePost }\r\n)(PostItem);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Removed\", \"success\"));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/posts', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Created\", \"success\"));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Added\", \"success\"));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n  try {\r\n    await axios.delete(\r\n      `/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};","import React from \"react\";\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <div style={{ display: \"grid\", placeItems: \"center\" }}>\r\n      <img\r\n        src={spinner}\r\n        style={{\r\n          width: \"400px\",\r\n        }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"p-3 my-3 shadow-lg rounded border border-success color\">\r\n      <div className=\"py-2 border border-success rounded\">\r\n        <h4 className=\"text-center\">Whats on Your Mind...</h4>\r\n      </div>\r\n\r\n      <div className=\"text-center my-3\">\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addPost({ text });\r\n            setText(\"\");\r\n          }}\r\n        >\r\n          <textarea\r\n            name=\"text\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            required\r\n            className=\"rounded p-2 my-2 font-weight-bold border border-success\"\r\n            style={{\r\n              letterSpacing: \"2px\",\r\n              outline: \"none\",\r\n              width: \"90%\"\r\n            }}\r\n          ></textarea>\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-success my-2 px-5\" value=\"Submit\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport PostItem from \"./PostItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? <Spinner /> : (\r\n    <Fragment>\r\n      <h1 className=\"text-primary\">Add Posts Here...</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fa fa-user\"></i>{\"  \"}\r\n        <strong>Welcome User</strong>\r\n      </p>\r\n\r\n      <PostForm />\r\n\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"p-3 my-3 shadow-lg rounded border border-success color\">\r\n      <div className=\"py-2 border border-success rounded\">\r\n        <h4 className=\"text-center\">Leave a Comment</h4>\r\n      </div>\r\n\r\n      <div className=\"text-center my-3\">\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addComment(postId, { text });\r\n            setText(\"\");\r\n          }}\r\n        >\r\n          <textarea\r\n            name=\"text\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            required\r\n            className=\"rounded p-2 my-2 font-weight-bold border border-success\"\r\n            style={{\r\n              letterSpacing: \"2px\",\r\n              outline: \"none\",\r\n              width: \"90%\"\r\n            }}\r\n          ></textarea>\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-success my-2 px-5\" value=\"Submit\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => {\r\n  return (\r\n    <div className=\"bg-light rounded border border-primary p-3 my-3\">\r\n      <Link to=\"/dashboard\">\r\n        <img\r\n          className=\"rounded-circle shadow mx-4\"\r\n          style={{\r\n            float: \"left\",\r\n            height: \"100px\",\r\n            width: \"100px\"\r\n          }}\r\n          src={avatar}\r\n          alt=\"user-img\"\r\n        />\r\n      </Link>\r\n\r\n      <div>\r\n        <h4>{name}</h4>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p>Posted on\r\n        <Moment format=\"DD/MM/YYY\">{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button onClick={e => deleteComment(postId, _id)}\r\n            className=\"btn btn-danger\">\r\n            <i className=\"fa fa-times\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteComment }\r\n)(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getPost } from \"../../actions/post\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n\r\n  return (loading || post == null ? <Spinner /> : <Fragment>\r\n    <Link to=\"/posts\" className=\"btn btn-outline-warning\">Back</Link>\r\n    <PostItem post={post} showActions={false} />\r\n\r\n    <CommentForm postId={post._id} />\r\n\r\n    <div>\r\n      {post.comments.map(comment => (\r\n        <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n      ))}\r\n    </div>\r\n  </Fragment>);\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Dashboard from './components/dashboard/Dashboard';\r\n\r\n\r\nimport Alert from \"./components/layout/Alert\";\r\n// Redux \r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\n// Posts \r\nimport Posts from './components/posts/Posts';\r\nimport Post from \"./components/post/Post\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <section className=\"container\">\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n              <PrivateRoute exact path=\"/post/:id\" component={Post} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}